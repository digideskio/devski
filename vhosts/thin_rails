#!/usr/bin/env bash

CURRENT=`pwd`
BASENAME=`basename $CURRENT`
SERVER_NAME=$1

if [ $2 ]; then PATH=$2; else PATH=$CURRENT; fi

read -r -d '' SERVER_CONF <<EOF
# vhost generated by devski

upstream app_server_$SERVER_NAME {
  server unix:$PATH/tmp/sockets/thin.sock fail_timeout=0;
}

server {
  listen 80;
  client_max_body_size 4G;
  server_name *.$SERVER_NAME.dev $SERVER_NAME.dev;
  keepalive_timeout 5;
  root $PATH/public;
  try_files \$uri/index.html \$uri.html \$uri @app;

  location @app {
    proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
    proxy_set_header Host \$http_host;
    proxy_redirect off;
    proxy_pass http://app_server_$SERVER_NAME;
  }

  error_page 500 502 503 504 /500.html;
  location = /500.html {
    root $PATH/public;
  }
}
EOF

SERVER_CONF_FILE="/usr/local/etc/nginx/sites-available/$SERVER_NAME.conf"

# Test the config
echo "sudo /usr/local/sbin/nginx -t -c /usr/local/etc/nginx/sites-available/$SERVER_NAME.conf"

# This needs to be run as sudo, getting `sudo: command not found` error when
# using in here.
# sudo echo "$SERVER_CONF" > $SERVER_CONF_FILE
echo "$SERVER_CONF" > $SERVER_CONF_FILE

echo "To enable $SERVER_NAME run:"
echo ""
echo "  devski enable $SERVER_NAME"
echo ""
echo ""
echo "In rails root run:"
echo ""
echo "  bundle exec thin start --socket tmp/sockets/thin.sock"
